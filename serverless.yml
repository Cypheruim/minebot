service: minebot

provider:
  name: aws
  runtime: python3.8
  stage: dev
  region: us-east-1
  profile: minebot
  environment:
    TELEGRAM_TOKEN: ${env:TELEGRAM_TOKEN}
    NO_IP_USER: ${env:NO_IP_USER}
    NO_IP_PASSWORD: ${env:NO_IP_PASSWORD}
  iam:
    role:
      statements:
        - Effect: Allow
          Action: [
            # Instances
            "ec2:DescribeInstances",
            "ec2:StartInstances",
            "ec2:StopInstances",
            "ec2:TerminateInstances",
            "ec2:RebootInstances",
            "ec2:RunInstances",
            # Key Pairs
            "ec2:CreateKeyPair",
            "ec2:DeleteKeyPair",
            "ec2:DescribeKeyPairs",
            # Region
            "ec2:DescribeRegions",
            "ec2:DescribeAvailabilityZones",
            # Security Group
            "ec2:CreateSecurityGroup",
            "ec2:DeleteSecurityGroup",
            "ec2:DescribeSecurityGroups",
            "ec2:DescribeSecurityGroupRules",
            "ec2:ModifySecurityGroupRules",
            "ec2:AuthorizeSecurityGroupIngress",
          ]
          Resource: "*"

apiGateway:
  resourcePolicy:
    - Effect: Allow
      Principal: '*'
      Action: execute-api:Invoke
      Resource:
        - execute-api:/*/POST/webhook
      Condition:
        IpAddress:
          aws:SourceIp:
            - '149.154.160.0/20'
            - '91.108.4.0/22'

functions:
  webhook:
    handler: webhook.handler
    events:
      - http:
          path: webhook
          method: post
          async: true

plugins:
  - serverless-offline
  - serverless-dotenv-plugin
  - serverless-python-requirements
  
custom:
  pythonRequirements:
    slim: true
    pythonBin: python3